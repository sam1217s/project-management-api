// ===================================
// MARIANA GOMEZ - C√ìDIGO COMPLETO INTEGRADO
// M√≥dulo: Proyectos (Preparado para Tasks/Comments/IA)
// Integrado perfectamente con Samuel y Maryamm
// ===================================

// ===================================
// src/models/Project.model.js
// ===================================

// ===================================
// src/controllers/project.controller.js
// ===================================


// ===================================
// src/routes/project.routes.js
// ===================================


// ===================================
// src/validators/project.validator.js
// ===================================

// ===================================
// tests/project.test.js
// ===================================


// ===================================
// scripts/seed-projects.js
// ===================================


// ===================================
// Actualizaci√≥n necesaria en server.js
// ===================================

/*
AGREGAR ESTA L√çNEA EN server.js DESPU√âS DE LAS RUTAS EXISTENTES:

// Rutas existentes...
app.use('/api/auth', require('./src/routes/auth.routes'));
app.use('/api/users', require('./src/routes/user.routes'));
app.use('/api/roles', require('./src/routes/role.routes'));
app.use('/api/categories', require('./src/routes/category.routes'));
app.use('/api/states', require('./src/routes/state.routes'));
app.use('/api/upload', require('./src/routes/upload.routes'));

// ‚úÖ NUEVA RUTA DE MARIANA:
app.use('/api/projects', require('./src/routes/project.routes'));

// Las rutas de Maryamm se agregar√°n despu√©s:
// app.use('/api/tasks', require('./src/routes/task.routes'));
// app.use('/api/comments', require('./src/routes/comment.routes'));
// app.use('/api/ai', require('./src/routes/ai.routes'));
*/

// ===================================
// DOCUMENTACI√ìN DE INTEGRACI√ìN
// ===================================

/*
üîó INTEGRACI√ìN CON MARYAMM:

1. CAMPOS PREPARADOS PARA TASKS:
   - members[].permissions.canCreateTasks
   - members[].permissions.canEditTasks
   - members[].permissions.canDeleteTasks
   - members[].permissions.canAssignTasks
   - settings.allowTaskCreation
   - settings.requireTaskApproval
   - settings.notifyOnTaskComplete

2. CAMPOS PREPARADOS PARA COMMENTS:
   - settings.allowComments

3. CAMPOS PREPARADOS PARA IA:
   - settings.aiAssistEnabled
   - aiMetadata.healthScore
   - aiMetadata.riskLevel
   - aiMetadata.recommendations
   - aiMetadata.lastAnalysis

4. VIRTUALS DISPONIBLES:
   - taskCount (conteo de tareas)
   - commentCount (conteo de comentarios)
   - progress (progreso basado en tareas)
   - isOverdue (proyecto retrasado)

5. M√âTODOS HELPER:
   - updateProgressFromTasks() (actualizar progreso desde tareas)
   - getPermissionsByRole() (permisos por rol)

6. ENDPOINTS LISTOS:
   - PUT /api/projects/:id/settings (configurar IA/tasks/comments)
   - PUT /api/projects/:id/members/:userId/permissions (permisos de tareas)

7. CAMPOS POPULADOS EN RELACIONES:
   - Virtual taskCount y commentCount autom√°ticamente populados
   - Members con permisos espec√≠ficos para cada usuario

üöÄ ¬°LISTO PARA INTEGRACI√ìN PERFECTA CON MARYAMM!
*/